# Generated by Django 4.2.6 on 2023-10-24 20:22
from typing import cast

from django.db import (
    migrations,
    transaction,
)
from django.db.backends.base.schema import BaseDatabaseSchemaEditor
from django.db.migrations.state import StateApps

from test_django_graphql import models as test_django_graphql_models


# noinspection PyPep8Naming
def create_data(apps: StateApps, _schema_editor: BaseDatabaseSchemaEditor) -> None:
    Author = cast(type[test_django_graphql_models.Author], apps.get_model("test_django_graphql", "Author"))
    Publisher = cast(type[test_django_graphql_models.Publisher], apps.get_model("test_django_graphql", "Publisher"))
    Genre = cast(type[test_django_graphql_models.Genre], apps.get_model("test_django_graphql", "Genre"))
    Book = cast(type[test_django_graphql_models.Book], apps.get_model("test_django_graphql", "Book"))

    with transaction.atomic():
        authors = [
            Author(first_name="Author", last_name="One", date_of_birth="2023-01-01"),
            Author(first_name="Author", last_name="Two", date_of_birth="2023-01-01"),
            Author(first_name="Author", last_name="Three", date_of_birth="2023-01-01"),
        ]
        Author.objects.bulk_create(authors)

        publishers = [
            Publisher(name="Publisher One", address="Address One"),
            Publisher(name="Publisher Two", address="Address Two"),
            Publisher(name="Publisher Three", address="Address Three"),
            Publisher(name="Publisher Four", address="Address Four"),
        ]
        Publisher.objects.bulk_create(publishers)

        genres = [Genre(name=f"Genre #{i}") for i in range(1, 9)]
        Genre.objects.bulk_create(genres)

        books = []
        for i in range(1, 61):
            book = Book(
                title=f"Book #{i}",
                summary=f"Summary for Book #{i}",
                author=authors[i % 3],
                publisher=publishers[i % 4],
                publish_date="2023-01-01",
            )
            books.append(book)
        Book.objects.bulk_create(books)

        for i, book in enumerate(Book.objects.all()):
            book.genres.add(genres[i % 8])


class Migration(migrations.Migration):
    dependencies = [
        ("test_django_graphql", "0001_initial"),
    ]

    operations = [migrations.RunPython(create_data, migrations.RunPython.noop)]
